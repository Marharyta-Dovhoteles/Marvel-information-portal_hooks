{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","View","imgSize","_jsxs","className","children","slice","cutDescription","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerID","setInterval","clearInterval","onCharloaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","_Fragment","rey","CharInfo","charId","skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/3.397b9118.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n       <img style={{display: 'block', width: \"250px\", height: \"250px\", objectFit:\n       'contain', margin: \"0 auto\"}} src={img} alt='error'/> \n    )\n}\n\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=9e0c4fed7d156efaaf350185104c1e97';\n    const _baseOffset = 210;\n\n   const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter)\n    }\n\n   const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t};\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n  const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics,\n\t\tgetComic}\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        setLoading(true);\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n            \n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n            \n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n        } catch(e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n\n    }, []);\n\n    const clearError = useCallback(() =>setError(null), []);\n\n    return {loading, request, error, clearError}\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useEffect, useState } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(0);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n       const timerID = setInterval(updateChar, 7000);\n       \n       return () => {\n        clearInterval(timerID);\n       }\n    }, [])\n\n    const onCharloaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharloaded);\n    }\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    \n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n\n    let imgSize = {objectFit: 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgSize = {objectFit: 'contain'};\n    }\n\n    const cutDescription = description => {\n        if (description.length > 150) {\n            return description.slice(0, 150) + '...'\n        }\n        return description\n    }\n\n    return (\n                <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgSize}/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        {description ? (\n                            <p className=\"randomchar__descr\">{cutDescription(description)}</p>\n                        ) : (\n                            <p>Oops! description not found</p>\n                        )} \n                       \n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n    )\n}\n\nexport default RandomChar;","import {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(1540);\n    const [charEnded, setCharEnded] = useState(false)\n    \n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n   const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n   const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}  \n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'blok'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n    \n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\n\nconst CharInfo = (props) => {\n    const [char, setChar] = useState(null);\n\n   const {loading, error, getCharacter, clearError} = useMarvelService();\n\n   useEffect(() => {\n    updateChar();\n   }, [props.charId])\n\n   const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n    clearError();\n    getCharacter(charId)\n            .then(onCharloaded)\n    }\n\n   const onCharloaded = (char) => {\n        setChar(char);\n    }\n\n        const skeleton = char || loading || error ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    \n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgSize = {objectFit: 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgSize = {objectFit: 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgSize}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return;\n                        return (\n                        <li rey={i} className=\"char__comics-item\">\n                            {item.name}\n                        </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component{\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n\n    const [selectedChar, setChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setChar(id);\n     }\n\n    return (\n        <>\n        <ErrorBoundary>\n            <RandomChar/>\n        </ErrorBoundary>\n        <div className=\"char__content\">\n            <ErrorBoundary>\n                <CharList onCharSelected={onCharSelected}/>\n            </ErrorBoundary>\n            <ErrorBoundary>\n                <CharInfo charId={selectedChar}/>\n            </ErrorBoundary>\n        </div>\n        <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    )\n}\n\nexport default MainPage;"],"sourceRoot":""}